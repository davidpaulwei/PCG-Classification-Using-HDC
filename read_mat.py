import numpy as np
import scipy.io


# For MFCC and DWT feature extraction code, visit Yaseen's work:
# https://github.com/yaseen21khan/Classification-of-Heart-Sound-Signal-Using-Multiple-Features-
# The PCG samples' features are extracted and stored in 'features.mat'. 'labels.mat' stores their labels.

# This python file is designed to read and preprocess data generated by Yaseen's Matlab code.

def read_file(feature_file: str = "features.mat", label_file: str = "labels.mat") -> tuple[np.ndarray, np.ndarray]:
    """read features and labels from matlab data file."""
    
    # read file
    features = scipy.io.loadmat(feature_file)['Features'].astype(float)
    labels = scipy.io.loadmat(label_file)['numericLabels']

    # fill missing data with the mean of that feature.
    features = np.where(np.isnan(features), np.nanmean(features, axis=0), features)

    return features, labels


def load_data(train_ratio: float = 0.8) -> tuple[list, list, list, list]:
    """load normalized train and test data."""
    
    # read feature and label from file.
    features, labels = read_file()

    # normalize feature values into range 0 ~ 1.
    alpha = np.percentile(features, 2, axis = 0)
    beta = np.percentile(features, 98, axis = 0)
    norm_features = (features - alpha) / (beta - alpha)
    norm_features[norm_features >= 1] = 1
    norm_features[norm_features <= 0] = 0

    # randomly assigns train and test sample.
    sample_data = np.hstack((norm_features, labels))
    np.random.shuffle(sample_data)
    num_trains = int(len(sample_data) * train_ratio)
    train_data = sample_data[:num_trains]
    test_data = sample_data[num_trains:]

    # converts train and test matrix into feature and label lists.
    train_features = train_data[:, :-1].tolist() # training samples' features.
    train_labels = train_data[:, -1].astype(int).tolist() # training samples' labels.
    test_features = test_data[:, :-1].tolist() # test samples' features.
    test_labels = test_data[:, -1].astype(int).tolist() # test samples' labels.

    return train_features, train_labels, test_features, test_labels